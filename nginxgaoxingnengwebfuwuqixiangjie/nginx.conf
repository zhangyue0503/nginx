
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

	#默认配置
    server {
        listen       8080;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            root   html;
            index  index.html index.htm;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # 普通重写
    server {
        listen       8081;
        #listen       somename:8080;
        server_name  jump.myweb.name;

		rewrite ^/ http://www.myweb.info/;
		
        #location / {
        #    root   html;
        #    index  index.html index.htm;
        #}
    }
	
	#根据条件重写
	#server {
     #   listen       8082;
        #listen       somename:8080;
      #  server_name  jump.myweb.name jump.myweb.info;
		
		##if($host ~ myweb\.info)
		#{
		#	rewrite ^(.*) http://jump.myweb.name$1 permanent;
		#}

		
		
        #location / {
        #    root   html;
        #    index  index.html index.htm;
        #}
    #}
	
	#根据正则重写
	server {
        listen       8083;
        #listen       somename:8080;
        server_name  jump1.myweb.name jump2.myweb.name;
		
		if ($host ~* ^(.*)\.myweb\.name$)
		{
			rewrite ^(.*) http://www.baidu.com$1;
			break;
		}

		
		
        #location / {
        #    root   html;
        #    index  index.html index.htm;
        #}
    }
	
	#多域名重写
	server {
        listen       8084;
        #listen       somename:8080;
        server_name  jump1.myweb.name jump2.myweb.name;
		
		if ($host ~* ^(.*)\.myweb\.name$)
		{
			rewrite ^(.*) http://www.baidu.com$1;
			break;
		}
		
        #location / {
        #    root   html;
        #    index  index.html index.htm;
        #}
    }
	
	#反盗链
	server {
        listen       8085;
        #listen       somename:8080;
        server_name  www.myweb.name;
		
		location ~* /server/file/\.(gif|jpg|png|bmp)$
		{
			#root /server/file/;
			valid_referers none blocked server_names *.myweb.name;
			if ($invalid_referer)
			{
				rewrite ^/ http://www.myweb.name/22.jpg;
			}
		}
		
        location / {
            root   html;
            #index  index.html index.htm;
        }
    }
	
	#正向代理服务器
	server {
		resolver 8.8.8.8;
		listen 8882;
		location / {
			proxy_pass http://$http_host$request_uri;
		}
	}
	
	##普通负载均衡
	upstream backend {
		server 192.168.99.100:8333;
		server 192.168.99.101:80;
	}
	server {
		listen 8086;
		server_name www.myweb1.name;
		index index.html index.htm;
		location / {
			proxy_pass http://backend;
			proxy_set_header Host $host;
		}
	}
	##加权负载均衡
	upstream backend2 {
		server 192.168.99.100:8333 weight=5;
		server 192.168.99.100:8334 weight=2;
		server 192.168.99.101:80;
	}
	server {
		listen 8087;
		server_name www.myweb1.name;
		index index.html index.htm;
		location / {
			proxy_pass http://backend2;
			proxy_set_header Host $host;
		}
	}
	
	
	


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
